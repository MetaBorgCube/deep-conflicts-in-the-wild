Ambiguity 1: 
RawContractAlias.find_opt cctxt s >>=? function
    | Some v -> return (s, v)
    | None ->
        Client_keys.Public_key_hash.find_opt cctxt s >>=? function
        | Some v ->
            return (s, Contract.default_contract v)
        | None ->
            failwith "no contract or key named %s" s

Ambiguity 2: 
find cctxt s >>= function
               | Ok v -> return v
               | Error k_errs ->
                   ContractEntity.of_source cctxt s >>= function
                   | Ok v -> return (s, v)
                   | Error c_errs -> Lwt.return (Error (k_errs @ c_errs))

Ambiguity 3: 
RawContractAlias.load cctxt >>=? fun raw_contracts ->
  Lwt_list.map_s
    (fun (n, v) -> Lwt.return ("", n, v))
    raw_contracts >>= fun contracts ->
  Client_keys.Public_key_hash.load cctxt >>=? fun keys ->
  (* List accounts (default contracts of identities) *)
  map_s (fun (n, v) ->
      RawContractAlias.mem cctxt n >>=? fun mem ->
      let p = if mem then "key:" else "" in
      let v' = Contract.default_contract v in
      return (p, n, v'))
    keys >>=? fun accounts ->
  return (contracts @ accounts)