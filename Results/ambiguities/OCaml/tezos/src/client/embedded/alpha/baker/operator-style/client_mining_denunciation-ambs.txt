Ambiguity 1: 
worker_loop () =
    (* let timeout = compute_timeout state in *)
    Lwt.choose [
      (* (timeout >|= fun () -> `Timeout) ; *)
      (get_endorsement () >|= fun e -> `Endorsement e) ;
    ] >>= function
    | `Endorsement (None | Some (Error _)) ->
        Lwt.return_unit
    | `Endorsement (Some (Ok e)) ->
        last_get_endorsement := None ;
        Client_keys.Public_key_hash.name cctxt
          e.Client_mining_operations.source >>= function
        | Ok source ->
            lwt_debug
              "Discovered endorsement for block %a by %s (slot @[<h>%a@])"
              Block_hash.pp_short e.block
              source
              Format.(pp_print_list pp_print_int) e.slots >>= fun () ->
            worker_loop ()
        | Error _ ->
            (* TODO log *)
            worker_loop ()